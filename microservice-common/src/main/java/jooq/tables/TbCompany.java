/*
 * This file is generated by jOOQ.
 */
package jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.Indexes;
import jooq.Keys;
import jooq.Public;
import jooq.tables.records.TbCompanyRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TbCompany extends TableImpl<TbCompanyRecord> {

    private static final long serialVersionUID = 468359473;

    /**
     * The reference instance of <code>public.tb_company</code>
     */
    public static final TbCompany TB_COMPANY = new TbCompany();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TbCompanyRecord> getRecordType() {
        return TbCompanyRecord.class;
    }

    /**
     * The column <code>public.tb_company.id</code>.
     */
    public final TableField<TbCompanyRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('tb_company_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.tb_company.name</code>.
     */
    public final TableField<TbCompanyRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.tb_company.location</code>.
     */
    public final TableField<TbCompanyRecord, String> LOCATION = createField("location", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.tb_company.phonenumber</code>.
     */
    public final TableField<TbCompanyRecord, String> PHONENUMBER = createField("phonenumber", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>public.tb_company.sectorname</code>.
     */
    public final TableField<TbCompanyRecord, String> SECTORNAME = createField("sectorname", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.tb_company.rating</code>.
     */
    public final TableField<TbCompanyRecord, Integer> RATING = createField("rating", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.tb_company.logo</code>.
     */
    public final TableField<TbCompanyRecord, String> LOGO = createField("logo", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.tb_company.backgroundinfo</code>.
     */
    public final TableField<TbCompanyRecord, String> BACKGROUNDINFO = createField("backgroundinfo", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.tb_company.entities</code>.
     */
    public final TableField<TbCompanyRecord, String> ENTITIES = createField("entities", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.tb_company.cid</code>.
     */
    public final TableField<TbCompanyRecord, String> CID = createField("cid", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.tb_company.code</code>.
     */
    public final TableField<TbCompanyRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>public.tb_company.createdby</code>.
     */
    public final TableField<TbCompanyRecord, String> CREATEDBY = createField("createdby", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.tb_company.email</code>.
     */
    public final TableField<TbCompanyRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.tb_company.website</code>.
     */
    public final TableField<TbCompanyRecord, String> WEBSITE = createField("website", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.tb_company.otherlinks</code>.
     */
    public final TableField<TbCompanyRecord, String> OTHERLINKS = createField("otherlinks", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.tb_company.categoryname</code>.
     */
    public final TableField<TbCompanyRecord, String> CATEGORYNAME = createField("categoryname", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.tb_company.sectorid</code>.
     */
    public final TableField<TbCompanyRecord, String> SECTORID = createField("sectorid", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.tb_company.categoryid</code>.
     */
    public final TableField<TbCompanyRecord, String> CATEGORYID = createField("categoryid", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.tb_company.active</code>.
     */
    public final TableField<TbCompanyRecord, Integer> ACTIVE = createField("active", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.tb_company.createdon</code>.
     */
    public final TableField<TbCompanyRecord, String> CREATEDON = createField("createdon", org.jooq.impl.SQLDataType.VARCHAR.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>public.tb_company</code> table reference
     */
    public TbCompany() {
        this(DSL.name("tb_company"), null);
    }

    /**
     * Create an aliased <code>public.tb_company</code> table reference
     */
    public TbCompany(String alias) {
        this(DSL.name(alias), TB_COMPANY);
    }

    /**
     * Create an aliased <code>public.tb_company</code> table reference
     */
    public TbCompany(Name alias) {
        this(alias, TB_COMPANY);
    }

    private TbCompany(Name alias, Table<TbCompanyRecord> aliased) {
        this(alias, aliased, null);
    }

    private TbCompany(Name alias, Table<TbCompanyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TbCompany(Table<O> child, ForeignKey<O, TbCompanyRecord> key) {
        super(child, key, TB_COMPANY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PHONENUMBER_UQX, Indexes.TB_COMPANY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TbCompanyRecord, Long> getIdentity() {
        return Keys.IDENTITY_TB_COMPANY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TbCompanyRecord> getPrimaryKey() {
        return Keys.TB_COMPANY_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TbCompanyRecord>> getKeys() {
        return Arrays.<UniqueKey<TbCompanyRecord>>asList(Keys.TB_COMPANY_PKEY, Keys.PHONENUMBER_UQX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TbCompany as(String alias) {
        return new TbCompany(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TbCompany as(Name alias) {
        return new TbCompany(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TbCompany rename(String name) {
        return new TbCompany(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TbCompany rename(Name name) {
        return new TbCompany(name, null);
    }
}
