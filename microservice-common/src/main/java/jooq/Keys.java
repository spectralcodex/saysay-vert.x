/*
 * This file is generated by jOOQ.
 */
package jooq;


import javax.annotation.Generated;

import jooq.tables.TbCategory;
import jooq.tables.TbComment;
import jooq.tables.TbCompany;
import jooq.tables.TbSector;
import jooq.tables.TbStory;
import jooq.tables.TbUser;
import jooq.tables.records.TbCategoryRecord;
import jooq.tables.records.TbCommentRecord;
import jooq.tables.records.TbCompanyRecord;
import jooq.tables.records.TbSectorRecord;
import jooq.tables.records.TbStoryRecord;
import jooq.tables.records.TbUserRecord;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<TbCategoryRecord, Long> IDENTITY_TB_CATEGORY = Identities0.IDENTITY_TB_CATEGORY;
    public static final Identity<TbCommentRecord, Long> IDENTITY_TB_COMMENT = Identities0.IDENTITY_TB_COMMENT;
    public static final Identity<TbCompanyRecord, Long> IDENTITY_TB_COMPANY = Identities0.IDENTITY_TB_COMPANY;
    public static final Identity<TbSectorRecord, Long> IDENTITY_TB_SECTOR = Identities0.IDENTITY_TB_SECTOR;
    public static final Identity<TbStoryRecord, Long> IDENTITY_TB_STORY = Identities0.IDENTITY_TB_STORY;
    public static final Identity<TbUserRecord, Long> IDENTITY_TB_USER = Identities0.IDENTITY_TB_USER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<TbCategoryRecord> TB_CATEGORY_PKEY = UniqueKeys0.TB_CATEGORY_PKEY;
    public static final UniqueKey<TbCommentRecord> TB_COMMENT_PKEY = UniqueKeys0.TB_COMMENT_PKEY;
    public static final UniqueKey<TbCompanyRecord> TB_COMPANY_PKEY = UniqueKeys0.TB_COMPANY_PKEY;
    public static final UniqueKey<TbCompanyRecord> PHONENUMBER_UQX = UniqueKeys0.PHONENUMBER_UQX;
    public static final UniqueKey<TbSectorRecord> SECTOR_PKEY = UniqueKeys0.SECTOR_PKEY;
    public static final UniqueKey<TbStoryRecord> TB_STORY_PKEY = UniqueKeys0.TB_STORY_PKEY;
    public static final UniqueKey<TbStoryRecord> SID_UQX = UniqueKeys0.SID_UQX;
    public static final UniqueKey<TbUserRecord> TB_USER_PKEY = UniqueKeys0.TB_USER_PKEY;
    public static final UniqueKey<TbUserRecord> EMAIL_UQX = UniqueKeys0.EMAIL_UQX;
    public static final UniqueKey<TbUserRecord> MOBILE_UQX = UniqueKeys0.MOBILE_UQX;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<TbCategoryRecord, Long> IDENTITY_TB_CATEGORY = Internal.createIdentity(TbCategory.TB_CATEGORY, TbCategory.TB_CATEGORY.ID);
        public static Identity<TbCommentRecord, Long> IDENTITY_TB_COMMENT = Internal.createIdentity(TbComment.TB_COMMENT, TbComment.TB_COMMENT.ID);
        public static Identity<TbCompanyRecord, Long> IDENTITY_TB_COMPANY = Internal.createIdentity(TbCompany.TB_COMPANY, TbCompany.TB_COMPANY.ID);
        public static Identity<TbSectorRecord, Long> IDENTITY_TB_SECTOR = Internal.createIdentity(TbSector.TB_SECTOR, TbSector.TB_SECTOR.ID);
        public static Identity<TbStoryRecord, Long> IDENTITY_TB_STORY = Internal.createIdentity(TbStory.TB_STORY, TbStory.TB_STORY.ID);
        public static Identity<TbUserRecord, Long> IDENTITY_TB_USER = Internal.createIdentity(TbUser.TB_USER, TbUser.TB_USER.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<TbCategoryRecord> TB_CATEGORY_PKEY = Internal.createUniqueKey(TbCategory.TB_CATEGORY, "tb_category_pkey", TbCategory.TB_CATEGORY.ID);
        public static final UniqueKey<TbCommentRecord> TB_COMMENT_PKEY = Internal.createUniqueKey(TbComment.TB_COMMENT, "tb_comment_pkey", TbComment.TB_COMMENT.ID);
        public static final UniqueKey<TbCompanyRecord> TB_COMPANY_PKEY = Internal.createUniqueKey(TbCompany.TB_COMPANY, "tb_company_pkey", TbCompany.TB_COMPANY.ID);
        public static final UniqueKey<TbCompanyRecord> PHONENUMBER_UQX = Internal.createUniqueKey(TbCompany.TB_COMPANY, "phonenumber_uqx", TbCompany.TB_COMPANY.PHONENUMBER);
        public static final UniqueKey<TbSectorRecord> SECTOR_PKEY = Internal.createUniqueKey(TbSector.TB_SECTOR, "sector_pkey", TbSector.TB_SECTOR.ID);
        public static final UniqueKey<TbStoryRecord> TB_STORY_PKEY = Internal.createUniqueKey(TbStory.TB_STORY, "tb_story_pkey", TbStory.TB_STORY.ID);
        public static final UniqueKey<TbStoryRecord> SID_UQX = Internal.createUniqueKey(TbStory.TB_STORY, "sid_uqx", TbStory.TB_STORY.SID);
        public static final UniqueKey<TbUserRecord> TB_USER_PKEY = Internal.createUniqueKey(TbUser.TB_USER, "tb_user_pkey", TbUser.TB_USER.ID);
        public static final UniqueKey<TbUserRecord> EMAIL_UQX = Internal.createUniqueKey(TbUser.TB_USER, "email_uqx", TbUser.TB_USER.EMAIL);
        public static final UniqueKey<TbUserRecord> MOBILE_UQX = Internal.createUniqueKey(TbUser.TB_USER, "mobile_uqx", TbUser.TB_USER.MOBILE);
    }
}
